name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Set up PHP
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
        tools: phpcs # use for PHP_CodeSniffer-based linit test
        
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Install Dependencies
      uses: php-actions/composer@v6
      with:
        php_version: "8.1"
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: |
        sudo chmod -R 775 storage bootstrap/cache
        sudo chown -R $USER:$USER storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

    - name: Install Behat and Mink
      run: |
        composer clearcache 
        composer self-update
        sudo composer require --dev behat/behat behat/mink friends-of-behat/mink-extension 
        sudo composer require --dev behat/mink-selenium2-driver

    - name: Run Behat Tests
      run: |
        vendor/bin/behat --init
        vendor/bin/behat
        
    # - name: Download and run Dependency-Check
    #   run: |
    #     VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
    #     curl -Ls "https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip" --output dependency-check.zip
    #     unzip dependency-check.zip
    #     cd dependency-check/bin
    #     chmod +x dependency-check.sh  # Ensure the script is executable
    #     ./dependency-check.sh --scan . --nvdApiKey ${{ secrets.NVD_API_KEY }}
    
    - name: GitGuardian scan
      uses: GitGuardian/ggshield/actions/secret@main
      env:
        GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
        GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
        GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
        GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

    - name: Run Linter
      run: |
        find . -name "*.php" -print0 | xargs -0 -n1 php -l
      # uses: wearerequired/lint-action@v2
      # with:
      #   php_codesniffer: true
      #   #  Optional: Ignore warnings
      #   #php_codesniffer_args: "-n" 
      #   auto_fix: true
        
    # - name: Download Selenium Server
    #   run: |
    #     sudo composer require --dev laravel/dusk
    #     sudo php artisan dusk:install
    #     sudo php artisan dusk --without-tty

    # - name: Download Selenium Server
    #   run: |
    #     sudo composer require php-webdriver/webdriver

    # - name: Start Selenium Server
    #   run: java -jar selenium-server-standalone.jar > /dev/null 2>&1 &
  
    # - name: Install dependencies
    #   run: composer install
  
    # - name: Run Selenium Tests
    #   run: php artisan dusk
